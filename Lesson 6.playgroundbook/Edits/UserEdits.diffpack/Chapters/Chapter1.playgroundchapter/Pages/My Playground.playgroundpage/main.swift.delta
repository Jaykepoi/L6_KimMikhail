<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Foundation
</string>
			<key>ModifiedRange</key>
			<string>{0, 18}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{0, 0}</string>
		</dict>
		<dict>
			<key>ModifiedContent</key>
			<string>struct Queue&lt;T&gt; {
    var Array = [T]()
    var count: Int{
        return Array.count
    }
    mutating func add(_ index: T){
        Array.append(index)
    }
    mutating func add(_ index: [T]){
        self.Array.append(contentsOf: index)
    }
    mutating func remove() -&gt; T?{
        if Array.count &gt; 0 {
            return Array.removeFirst()
        } else {
            return nil
        }
    }
    public func filter(array: [T], qQueue: (T) -&gt; Bool) -&gt; [T]{
        var newArray = [T]()
        for i in array{
            if qQueue(i){
                newArray.append(i)
            }
        }
        return newArray
    }
    
    subscript(index: Int) -&gt; T?{
        if index &gt; Array.count || index &lt; 0{
            return nil
        }else{
            return Array[index]
        }
    }
}
var queue = Queue&lt;Int&gt;()
queue.add([1,9,23,44,234,34,76,12,3])
print(queue)
let filterQueue = queue.filter(array: queue.Array) {(i: Int) -&gt; Bool in
    return i % 2 == 1
}
print(filterQueue)
queue.count
</string>
			<key>ModifiedRange</key>
			<string>{19, 1014}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{1, 0}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/My Playground.playgroundpage/main.swift</string>
</dict>
</plist>
